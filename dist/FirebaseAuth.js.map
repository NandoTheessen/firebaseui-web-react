{"version":3,"sources":["../src/FirebaseAuth.jsx"],"names":["ELEMENT_ID","firebaseUiDeletion","Promise","resolve","FirebaseAuth","props","uiConfig","firebaseAuth","className","uiCallback","unregisterAuthObserver","componentDidMount","require","firebaseui","then","firebaseUiWidget","auth","AuthUI","getInstance","signInFlow","reset","userSignedIn","onAuthStateChanged","user","start","catch","e","console","log","componentWillUnmount","delete","render","React","Component"],"mappings":";;;;AAAA;;;;;;;;;;;;AAGA,IAAMA,aAAa,sBAAnB;;AAGA,IAAIC,qBAAqBC,QAAQC,OAAR,EAAzB;;IAKqBC,Y;;;AACnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,4BAAMA,KAAN,CADiB;;AAGjB,UAAKC,QAAL,GAAgBD,MAAMC,QAAtB;AACA,UAAKC,YAAL,GAAoBF,MAAME,YAA1B;AACA,UAAKC,SAAL,GAAiBH,MAAMG,SAAvB;AACA,UAAKC,UAAL,GAAkBJ,MAAMI,UAAxB;AACA,UAAKC,sBAAL,GAA8B,YAAM,CAAE,CAAtC;AAPiB;AAQlB;;yBAKDC,iB,gCAAoB;AAAA;;AAElBC,YAAQ,gCAAR;;AAIA,QAAMC,aAAaD,QAAQ,YAAR,CAAnB;;AAIA,WAAOX,mBACJa,IADI,CACC,YAAM;AAEV,aAAKC,gBAAL,GACEF,WAAWG,IAAX,CAAgBC,MAAhB,CAAuBC,WAAvB,MAAwC,IAAIL,WAAWG,IAAX,CAAgBC,MAApB,CAA2B,OAAKV,YAAhC,CAD1C;AAEA,UAAI,OAAKD,QAAL,CAAca,UAAd,KAA6B,OAAjC,EAA0C;AACxC,eAAKJ,gBAAL,CAAsBK,KAAtB;AACD;;AAGD,aAAKC,YAAL,GAAoB,KAApB;AACA,aAAKX,sBAAL,GAA8B,OAAKH,YAAL,CAAkBe,kBAAlB,CAAqC,UAACC,IAAD,EAAU;AAC3E,YAAI,CAACA,IAAD,IAAS,OAAKF,YAAlB,EAAgC;AAC9B,iBAAKN,gBAAL,CAAsBK,KAAtB;AACD;AACD,eAAKC,YAAL,GAAoB,CAAC,CAACE,IAAtB;AACD,OAL6B,CAA9B;;AAQA,UAAI,OAAKd,UAAT,EAAqB;AACnB,eAAKA,UAAL,CAAgB,OAAKM,gBAArB;AACD;;AAGD,aAAKA,gBAAL,CAAsBS,KAAtB,CAA4B,MAAMxB,UAAlC,EAA8C,OAAKM,QAAnD;AACD,KAzBI,EA0BJmB,KA1BI,CA0BE,UAACC,CAAD;AAAA,aAAOC,QAAQC,GAAR,CAAY,aAAZ,CAAP;AAAA,KA1BF,CAAP;AA2BD,G;;yBAKDC,oB,mCAAuB;AAAA;;AACrB5B,yBAAqBA,mBAClBa,IADkB,CACb,YAAM;AACV,aAAKJ,sBAAL;AACA,aAAO,OAAKK,gBAAL,CAAsBe,MAAtB,EAAP;AACD,KAJkB,EAKlBL,KALkB,CAKZ,UAACC,CAAD;AAAA,aAAOC,QAAQC,GAAR,CAAY,aAAZ,CAAP;AAAA,KALY,CAArB;AAMA,WAAO3B,kBAAP;AACD,G;;yBAED8B,M,qBAAS;AACP,WAAO,uCAAK,WAAW,KAAKvB,SAArB,EAAgC,IAAIR,UAApC,GAAP;AACD,G;;;EApEuCgC,gBAAMC,S;;kBAA3B7B,Y","file":"FirebaseAuth.js","sourcesContent":["import React from 'react';\n\n// Global ID for the element.\nconst ELEMENT_ID = 'firebaseui_container';\n\n// Promise that resolves unless the FirebaseUI instance is currently being deleted.\nlet firebaseUiDeletion = Promise.resolve();\n\n/**\n * React Component wrapper for the FirebaseUI Auth widget.\n */\nexport default class FirebaseAuth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.uiConfig = props.uiConfig;\n    this.firebaseAuth = props.firebaseAuth;\n    this.className = props.className;\n    this.uiCallback = props.uiCallback;\n    this.unregisterAuthObserver = () => {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  componentDidMount() {\n    // Import the css only on the client.\n    require('firebaseui/dist/firebaseui.css');\n\n    // Firebase UI only works on the Client. So we're loading the package in `componentDidMount`\n    // So that this works when doing server-side rendering.\n    const firebaseui = require('firebaseui');\n\n    // Wait in case the firebase UI instance is being deleted.\n    // This can happen if you unmount/remount the element quickly.\n    return firebaseUiDeletion\n      .then(() => {\n        // Get or Create a firebaseUI instance.\n        this.firebaseUiWidget =\n          firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(this.firebaseAuth);\n        if (this.uiConfig.signInFlow === 'popup') {\n          this.firebaseUiWidget.reset();\n        }\n\n        // We track the auth state to reset firebaseUi if the user signs out.\n        this.userSignedIn = false;\n        this.unregisterAuthObserver = this.firebaseAuth.onAuthStateChanged((user) => {\n          if (!user && this.userSignedIn) {\n            this.firebaseUiWidget.reset();\n          }\n          this.userSignedIn = !!user;\n        });\n\n        // Trigger the callback if any was set.\n        if (this.uiCallback) {\n          this.uiCallback(this.firebaseUiWidget);\n        }\n\n        // Render the firebaseUi Widget.\n        this.firebaseUiWidget.start('#' + ELEMENT_ID, this.uiConfig);\n      })\n      .catch((e) => console.log('Caught you!'));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  componentWillUnmount() {\n    firebaseUiDeletion = firebaseUiDeletion\n      .then(() => {\n        this.unregisterAuthObserver();\n        return this.firebaseUiWidget.delete();\n      })\n      .catch((e) => console.log('Caught you!'));\n    return firebaseUiDeletion;\n  }\n\n  render() {\n    return <div className={this.className} id={ELEMENT_ID} />;\n  }\n}\n"]}